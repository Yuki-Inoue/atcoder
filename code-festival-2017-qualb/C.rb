# Generated by AtcoderGreedy on 2018-04-23
# CODE-FESTIVAL-2017-QUALB C
# Your code here

$N, $M = gets.chomp.split(' ').map(&:to_i)

$g = {}

$M.times do
  a, b = gets.chomp.split(' ').map(&:to_i)
  $g[a] ||= []
  $g[a] << b

  $g[b] ||= []
  $g[b] << a
end

def is_bipartite_graph(graph)
  stack = [[graph.keys.first, :white]]

  color = {}
  until stack.empty?
    point, color_candidate = stack.pop
    prev_color = color[point]
    return false if prev_color && prev_color != color_candidate
    next if prev_color
    color[point] =  color_candidate
    graph[point].each do |p|
      next_color = color_candidate == :white ? :red : :white
      stack << [p, next_color]
    end
  end
  num_reds = color.select { |_, v| v == :red }.size
  num_whites = color.select { |_, v| v == :white }.size
  [num_reds, num_whites]
end

data = is_bipartite_graph($g)

if data
  puts data[0] * data[1] - $M
else
  puts $N * ($N - 1) / 2 - $M
end
